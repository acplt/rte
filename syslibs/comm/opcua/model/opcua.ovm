#include "ov.ovm"
#include "ksbase.ovm"

/*
    TODO: Create optional OV Networklayer again
*/


LIBRARY opcua
    VERSION   = "V0.2 (16-01-2019)";
    AUTHOR    = "Lars Evertz, Florian Palm, Torben Deppe, Julian Grothoff";
    COPYRIGHT = "";
    COMMENT   = "Implements an OPC UA server with access to the models in the ov system.";

    CLASS uaServer        :    CLASS ksbase/ComTask
        IS_INSTANTIABLE;
        COMMENT = "Represents a UA Server with access to the OV Information model.";
        VARIABLES
        	//public variables
        	run                :    BOOL
        		HAS_SET_ACCESSOR
        		FLAGS = "i"
        	    COMMENT = "Toggle OPCUA server on or off.";
        	isRunning          :    BOOL
        		FLAGS = "o"
        	    COMMENT = "Determins, whether OPC UA server is running";
        	reset              :    BOOL
        		HAS_SET_ACCESSOR
        		FLAGS = "i"
        		COMMENT = "Shuts down the server and resets the error flag.";
        	error              :    BOOL
        		FLAGS = "o"
        	    COMMENT = "Determins, whether an error occured.";
        	errorText          :    STRING
        		FLAGS = "o"
        	    COMMENT = "Text of last error."
        	    INITIALVALUE = "";
        	//privat variables
            uaConfig             :    C_TYPE <OV_PTR_UA_ServerConfig>
                FLAGS = "n"
                COMMENT = "Stack-specific representation of server configuration.";
            server             :    C_TYPE <OV_PTR_UA_Server>
                FLAGS = "n"
                COMMENT = "Stack-specific representation of server data.";
        END_VARIABLES;    
        OPERATIONS
        	startup            :    C_FUNCTION <OV_FNC_STARTUP>;
            shutdown           :    C_FUNCTION <OV_FNC_SHUTDOWN>;
            getaccess          :    C_FUNCTION <OV_FNC_GETACCESS>;
            typemethod         :    C_FUNCTION <KSBASE_FNC_TYPEMETHOD>;
        END_OPERATIONS;
    END_CLASS;


//TODO comments
//TODO add reset method, to reset config to default values.
    CLASS uaServerConfig	:	CLASS ov/object
    	IS_INSTANTIABLE;
    	COMMENT = "Holds all configuration data for an OPC UA Server, that are configurable in the OV System. Should be placed beneath uaServer.";
    	VARIABLES
    		applicationURI     :    STRING
                HAS_SET_ACCESSOR
                INITIALVALUE   =    "urn:acplt:open62541:acplt-iec62541Server";
            applicationName    :    STRING
                HAS_SET_ACCESSOR
                INITIALVALUE   =    "acplt-opcua";
            ns1URI             :    STRING
                HAS_SET_ACCESSOR
                INITIALVALUE   =    "iec62541-ov.acplt.org";
            port               :	UINT
            	HAS_SET_ACCESSOR
            	COMMENT = "Has to be unique within the system, otherwise undefined behaviour."
            	INITIALVALUE   =    4840;
    	END_VARIABLES;
    	OPERATIONS
            getaccess          :    C_FUNCTION <OV_FNC_GETACCESS>;
        END_OPERATIONS;
    END_CLASS;
    
    /*    
        Add associations and their documentation here.
        Association syntax is:
    */
    ASSOCIATION uaConfigToServer : ONE_TO_ONE
        PARENT server   : CLASS opcua/uaServer;
        CHILD  config   : CLASS opcua/uaServerConfig;
    END_ASSOCIATION;

END_LIBRARY;

